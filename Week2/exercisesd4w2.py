# -*- coding: utf-8 -*-
"""ExercisesDay4Week2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZZ5hQi53pLJvmp7Y_SjCGB7W4j9mqhVy
"""

# # Exercise 1
# Why is data visualization important in data analysis?
# Data visualization helps us see patterns, trends, and insights that might be hard to understand in raw numbers.
# It makes complex data easier to interpret and helps us make better decisions quickly.
# Instead of looking at thousands of numbers, a simple chart can show us what’s happening at a glance.

# What is the purpose of a line graph?
# A line graph is great for showing how something changes over time.
# It helps us track trends, spot increases or decreases, and compare different data points smoothly.
# For example, a line graph can show how sales go up or down each month, helping businesses plan better.

# Exercise 2 line plot
import matplotlib.pyplot as plt

x= ['Day1', 'Day2', 'Day3', 'Day4', 'Day5', 'Day6', 'Day7']
y= [72, 74, 76, 80, 82, 78, 75]
plt.plot(x, y, color='pink', linestyle='dashed', linewidth=2, marker='o', markerfacecolor='purple', markersize=12)
plt.title('Degrees')
plt.xlabel('Day')
plt.ylabel('Temperature (°F)')
plt.show()

# Exercise 3
values = [5000, 5500, 6200, 7000, 7500, 7500, 8100, 8300, 8000, 7500, 7000, 6500]
categories = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']

plt.bar(categories, values, color=['red', 'green', 'blue', 'purple'], edgecolor='black', hatch='/')

plt.xlabel('Month')
plt.ylabel('Sales Amount ($)')
plt.title('Sales data for the year')

plt.show()

# Exercise 4
import numpy as np

# Generate 500 random numbers following a normal distribution
data = np.random.normal(loc=0, scale=1, size=500)  # Mean=0, StdDev=1

# Create the histogram
plt.hist(data, bins=20, color='Pink', edgecolor='black', alpha=0.7)

# Add labels and title
plt.title('Histogram of CGPA data')
plt.xlabel('Value')
plt.ylabel('Frequency')

# Show the plot
plt.show()

# Exercise 5
# Bar Plot
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd

df = pd.read_csv('clean_dataset.csv')

print(df.columns)

data = {
    'Choose your gender' : ['Male', 'Female', 'Male', 'Female'],
    'Do you have anxiety?' : ['High', 'Low', 'High', 'Low']
}

df = pd.DataFrame(data)
print(df)

sns.countplot(x='Choose your gender', hue='Do you have anxiety', data=df, palette='Blues')
plt.xlabel('Gender')
plt.ylabel('Proportion with Anxiety')
plt.title('Anxiety Levels Across Different Genders')
plt.show()

# Exercise 6 - Scatter Plot
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd

Panic_attacks = {
    'Age' : [20, 30, 40, 50],
    'Do you have Panic Attacks?': ['Yes', 'No', 'Yes', 'No']
}

df = pd.DataFrame(Panic_attacks)
print(df)

# Convert Yes/No to 1/0 for regression
df['Do you have Panic Attacks?'] = df['Do you have Panic Attacks?'].map({'Yes': 1, 'No': 0})

sns.lmplot(x='Age', y='Do you have Panic Attacks?', data=df, aspect=1.5, height=5)
plt.title('Relationship Between Age and Panic Attacks')
plt.show()